{"version":3,"sources":["components/Centers/FullDetailsPopUp/FullDetailsPopUp.jsx","components/Centers/CenterDisplay.jsx","components/HelperModules/Sort.js","components/HelperModules/DateTime.js","components/HelperModules/Filter.js","components/HelperModules/Notification.js","components/VaccineCenterList.jsx","components/HelperModules/Center.js","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["FullDetailsPopUp","isPopupOpen","selectedCenter","closePopup","sessionsArray","sessions","ReactDom","createPortal","className","onClick","name","address","pincode","vaccine","fee_type","vaccine_fees","fee","React","Children","toArray","map","session","date","min_age_limit","available_capacity_dose1","available_capacity_dose2","document","getElementById","CenterDisplay","vaccineCenters","useState","setIsPopupOpen","setSelectedCenter","userSortSelection","setUserSortSelection","sortedData","setSortedData","useEffect","sort","a","b","centers","Date","sortCentersByDate","center","block_name","zeroCorrect","value","getTime","hourString","getHours","minuteString","getMinutes","secondString","getSeconds","getCurrentDate","today","dd","getDate","mm","getMonth","yyyy","getFullYear","applyFilters","filter","fns","reduce","acc","f","pipe","pinCodeFilter","pinCode","regex","RegExp","exec","nameFilter","vaccineFilter","ageFilter","age","feeFilter","doseFilter","dose","initialFilters","VaccineCenterList","filteredVaccineCenters","setFilteredVaccineCenters","setFilter","notificationStatus","setNotificationStatus","filteredData","Notification","requestPermission","length","window","permission","then","alert","handleChange","e","target","parseInt","el","Fragment","type","id","defaultChecked","htmlFor","toUpperCase","toLowerCase","onChange","disabled","memo","createVaccineCenterList","apiData","sessionFilteredCenters","forEach","newSessions","removeEmptySessions","push","available_capacity","Header","getDistrict","selectedDistrict","districts","setDistricts","dropdownStatus","setDropdownStatus","getStateData","fetch","res","json","data","district_name","style","display","district","index","handleDistrictSelection","href","initialDistrict","district_id","App","setVaccineCenters","setSelectedDistrict","getVaccineCenters","useCallback","url","URL","searchParams","append","mode","response","centerList","console","log","inter","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2e7bc930.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport './FullDetailsPopUp.css';\n\nfunction FullDetailsPopUp({ isPopupOpen, selectedCenter, closePopup }) {\n\tlet sessionsArray = selectedCenter.sessions;\n\tif (!isPopupOpen) return null;\n\n\treturn ReactDom.createPortal(\n\t\t<>\n\t\t\t<div className='overlay'></div>\n\t\t\t<div className='pop-up'>\n\t\t\t\t<button onClick={closePopup}>X</button>\n\t\t\t\t<table className='details-table'>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className='details-head'>Center:</td>\n\t\t\t\t\t\t\t<td>{selectedCenter.name}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className='details-head'>Address:</td>\n\t\t\t\t\t\t\t<td>{selectedCenter.address}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className='details-head'>Pincode:</td>\n\t\t\t\t\t\t\t<td>{selectedCenter.pincode}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className='details-head'>Vaccine:</td>\n\t\t\t\t\t\t\t<td>{selectedCenter.sessions[0].vaccine}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className='details-head'>Fee:</td>\n\t\t\t\t\t\t\t{selectedCenter.fee_type === 'Free' ? (\n\t\t\t\t\t\t\t\t<td>Free</td>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<td>₹{selectedCenter.vaccine_fees[0].fee}</td>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h4>All Sessions</h4>\n\t\t\t\t\t<div className='sessions-table-container'>\n\t\t\t\t\t\t<table className='all-sessions-table'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t\t\t\t<th>Min.Age</th>\n\t\t\t\t\t\t\t\t\t<th>Dose 1</th>\n\t\t\t\t\t\t\t\t\t<th>Dose 2</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{React.Children.toArray(\n\t\t\t\t\t\t\t\t\tsessionsArray.map((session) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{session.date}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{session.min_age_limit}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{session.available_capacity_dose1}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{session.available_capacity_dose2}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>,\n\t\tdocument.getElementById('modal-root')\n\t);\n}\n\nexport default FullDetailsPopUp;\n","import React, { useState, useEffect } from 'react';\nimport './CenterDisplay.css';\nimport FullDetailsPopUp from './FullDetailsPopUp/FullDetailsPopUp';\nimport { sortCentersByDate, sortCentersByName } from '../HelperModules/Sort';\n\nfunction CenterDisplay({ vaccineCenters }) {\n\tconst [isPopupOpen, setIsPopupOpen] = useState(false);\n\tconst [selectedCenter, setSelectedCenter] = useState('');\n\tconst [userSortSelection, setUserSortSelection] = useState('');\n\tconst [sortedData, setSortedData] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (userSortSelection === 'name') {\n\t\t\tsetSortedData(sortCentersByName([...vaccineCenters]));\n\t\t} else {\n\t\t\tsetSortedData(sortCentersByDate([...vaccineCenters]));\n\t\t}\n\t}, [userSortSelection, vaccineCenters]);\n\n\treturn (\n\t\t<>\n\t\t\t<table className='vaccine-list-table'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclassName='col col-1'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetUserSortSelection('date');\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclassName='col col-2'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetUserSortSelection('name');\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tCenter\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th className='col col-3'>Dose 1</th>\n\t\t\t\t\t\t<th className='col col-4'>Dose 2</th>\n\t\t\t\t\t\t<th className='col col-5'>Min.Age</th>\n\t\t\t\t\t\t<th className='col col-6'>Vaccine</th>\n\t\t\t\t\t\t<th className='col col-7'>Type</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody className='vaccine-table-body'>\n\t\t\t\t\t{React.Children.toArray(\n\t\t\t\t\t\tsortedData.map((center) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetIsPopupOpen(true);\n\t\t\t\t\t\t\t\t\t\tsetSelectedCenter(center);\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<td className='col col-1'>{center.sessions[0].date}</td>\n\t\t\t\t\t\t\t\t\t<td className='col col-2'>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{center.name},{center.block_name},{center.pincode}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td className='col col-3'>{center.sessions[0].available_capacity_dose1}</td>\n\t\t\t\t\t\t\t\t\t<td className='col col-4'>{center.sessions[0].available_capacity_dose2}</td>\n\t\t\t\t\t\t\t\t\t<td className='col col-5'>{center.sessions[0].min_age_limit}</td>\n\t\t\t\t\t\t\t\t\t<td className='col col-6'>{center.sessions[0].vaccine}</td>\n\t\t\t\t\t\t\t\t\t<td className='col col-7'>{center.fee_type}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)}\n\n\t\t\t\t\t<FullDetailsPopUp\n\t\t\t\t\t\tisPopupOpen={isPopupOpen}\n\t\t\t\t\t\tselectedCenter={selectedCenter}\n\t\t\t\t\t\tclosePopup={() => setIsPopupOpen(false)}\n\t\t\t\t\t/>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</>\n\t);\n}\n\nexport default CenterDisplay;\n","const sortCentersByName = (centers) => {\n\treturn centers.sort((a, b) => {\n\t\tif (a.name < b.name) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name > b.name) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n};\n\nconst sortCentersByDate = (centers) => {\n\treturn centers.sort((a, b) => {\n\t\treturn new Date(a.sessions[0].date) - new Date(b.sessions[0].date);\n\t});\n};\n\nexport { sortCentersByDate, sortCentersByName };\n","const zeroCorrect = value => {\n  if (value < 10) {\n    return `0${value}`;\n  }\n  return value;\n};\n\nconst getTime = () => {\n  const date = new Date();\n  const hourString = zeroCorrect(date.getHours());\n  const minuteString = zeroCorrect(date.getMinutes());\n  const secondString = zeroCorrect(date.getSeconds());\n  const timeString = `${hourString}:${minuteString}:${secondString}`;\n  return timeString;\n};\n\nconst getCurrentDate = () => {\n  const today = new Date();\n  const dd = zeroCorrect(today.getDate());\n  let mm = zeroCorrect(today.getMonth() + 1);\n  const yyyy = zeroCorrect(today.getFullYear());\n  const todayString = `${dd}-${mm}-${yyyy}`;\n  return todayString;\n};\n\nexport { getCurrentDate, getTime };\n","const filterAge = (ageFilter) => (centers) => {\n\tif (ageFilter === 0) {\n\t\treturn centers;\n\t}\n\tconst newCenters = centers.filter((center) => {\n\t\tif (center.sessions[0].min_age_limit === ageFilter) {\n\t\t\treturn center;\n\t\t}\n\t\treturn null;\n\t});\n\treturn newCenters;\n};\n\nconst filterVaccine = (vaccineFilter) => (centers) => {\n\tif (vaccineFilter === 'ALL') {\n\t\treturn centers;\n\t}\n\tconst newCenters = centers.filter((center) => {\n\t\tif (center.sessions[0].vaccine === vaccineFilter) {\n\t\t\treturn center;\n\t\t}\n\t\treturn null;\n\t});\n\treturn newCenters;\n};\n\nconst filterFee = (feeFilter) => (centers) => {\n\tif (feeFilter === 'ALL') {\n\t\treturn centers;\n\t}\n\tconst newCenters = centers.filter((center) => {\n\t\tif (center.fee_type === feeFilter) {\n\t\t\treturn center;\n\t\t}\n\t\treturn null;\n\t});\n\treturn newCenters;\n};\n\nconst filterDose = (doseFilter) => (centers) => {\n\tif (doseFilter === 'ALL') {\n\t\treturn centers;\n\t}\n\tconst newCenters = centers.filter((center) => {\n\t\tif (doseFilter === 'dose1') {\n\t\t\tif (center.sessions[0].available_capacity_dose1 > 0) {\n\t\t\t\treturn center;\n\t\t\t}\n\t\t} else if (doseFilter === 'dose2') {\n\t\t\tif (center.sessions[0].available_capacity_dose2 > 0) {\n\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t});\n\treturn newCenters;\n};\n\nconst filterName = (nameFilter) => (centers) => {\n\tif (nameFilter === '') {\n\t\treturn centers;\n\t}\n\tconst regex = new RegExp(nameFilter, 'gi');\n\tconst newCenters = centers.filter((center) => {\n\t\tconst match = regex.exec(center.name);\n\t\tif (match) {\n\t\t\treturn center;\n\t\t}\n\t\treturn null;\n\t});\n\treturn newCenters;\n};\nconst filterPinCode = (pinCodeFilter) => (centers) => {\n\tif (pinCodeFilter === 0) {\n\t\treturn centers;\n\t}\n\tconst regex = new RegExp(pinCodeFilter, 'g');\n\tconst newCenters = centers.filter((center) => {\n\t\tconst match = regex.exec(center.pincode);\n\t\tif (match) {\n\t\t\treturn center;\n\t\t}\n\t\treturn null;\n\t});\n\treturn newCenters;\n};\nconst pipe =\n  (...fns) =>\n  value =>\n    fns.reduce((acc, f) => f(acc), value);\n\nfunction applyFilters(filter, vaccineCenters) {\n  return pipe(\n    filterPinCode(filter.pinCode),\n    filterName(filter.name),\n    filterVaccine(filter.vaccine),\n    filterAge(filter.age),\n    filterFee(filter.fee),\n    filterDose(filter.dose),\n  )(vaccineCenters);\n}\n\nexport { applyFilters };\n","const pushNotification = () => {\n\tif (!('Notification' in window)) {\n\t\talert('This browser does not support desktop notification');\n\t} else if (Notification.permission === 'granted') {\n\t\tlet notification = new Notification('Vaccines are available!');\n\t} else if (Notification.permission !== 'denied') {\n\t\tNotification.requestPermission().then(function (permission) {\n\t\t\tif (permission === 'granted') {\n\t\t\t\tlet notification = new Notification('Vaccines are available!');\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport { pushNotification };\n","import React, { useEffect, useState, memo } from 'react';\nimport CenterDisplay from './Centers/CenterDisplay';\nimport { getTime } from './HelperModules/DateTime';\nimport { applyFilters } from './HelperModules/Filter';\nimport { pushNotification } from './HelperModules/Notification';\nimport './VaccineCenterList.css';\n\nconst initialFilters = {\n  age: 0,\n  vaccine: 'ALL',\n  name: '',\n  pinCode: 0,\n  fee: 'ALL',\n  dose: 'ALL',\n};\n\nfunction VaccineCenterList({ vaccineCenters }) {\n  const [filteredVaccineCenters, setFilteredVaccineCenters] = useState([]);\n  const [filter, setFilter] = useState(initialFilters);\n\n  const [notificationStatus, setNotificationStatus] = useState(false);\n\n  useEffect(() => {\n    const filteredData = applyFilters(filter, vaccineCenters);\n\n    if (notificationStatus) {\n      Notification.requestPermission();\n      if (filteredData.length > 0) {\n        pushNotification();\n        setNotificationStatus(false);\n      }\n    }\n    setFilteredVaccineCenters(filteredData);\n  }, [filter, vaccineCenters]);\n\n  const handleChange = e => {\n    if (e.target.name === 'age') {\n      setFilter({ ...filter, age: parseInt(e.target.value) });\n      return;\n    }\n    setFilter({ ...filter, ...{ [e.target.name]: e.target.value } });\n  };\n\n  return (\n    <div className=\"VaccineCenterList\">\n      <div className=\"filter-container\">\n        <div className=\"radio-container\">\n          <div className=\"switch-field\">\n            {['0', '18', '40', '45'].map(el => (\n              <React.Fragment key={el}>\n                <input\n                  type=\"radio\"\n                  id={`age${el}`}\n                  name=\"age\"\n                  value={el}\n                  onClick={handleChange}\n                  defaultChecked={el === '0'}\n                />\n                <label htmlFor={`age${el}`}>\n                  {el === '0' ? 'ALL' : el + '+'}\n                </label>\n              </React.Fragment>\n            ))}\n          </div>\n\n          <div className=\"switch-field\">\n            {['All', 'Covishield', 'Covaxin', 'Sputnik V'].map(el => (\n              <React.Fragment key={el}>\n                <input\n                  type=\"radio\"\n                  id={`vaccine${el}`}\n                  name=\"vaccine\"\n                  value={el.toUpperCase()}\n                  onClick={handleChange}\n                  defaultChecked={el === 'All'}\n                />\n                <label htmlFor={`vaccine${el}`}>{el}</label>\n              </React.Fragment>\n            ))}\n          </div>\n\n          <div className=\"switch-field\">\n            {['All', 'Free', 'Paid'].map(el => (\n              <React.Fragment key={el}>\n                <input\n                  type=\"radio\"\n                  id={`fee${el}`}\n                  name=\"fee\"\n                  value={el === 'All' ? 'ALL' : el}\n                  onClick={handleChange}\n                  defaultChecked={el === 'All'}\n                />\n                <label htmlFor={`fee${el}`}>{el}</label>\n              </React.Fragment>\n            ))}\n          </div>\n\n          <div className=\"switch-field\">\n            {['All', 'Dose1', 'Dose2'].map(el => (\n              <React.Fragment key={el}>\n                <input\n                  type=\"radio\"\n                  id={`dose${el}`}\n                  name=\"dose\"\n                  value={el === 'All' ? 'ALL' : el.toLowerCase()}\n                  onClick={handleChange}\n                  defaultChecked={el === 'All'}\n                />\n                <label htmlFor={`dose${el}`}>{el}</label>\n              </React.Fragment>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"secondary-filter-container\">\n          <div className=\"input-filter-container\">\n            <div>\n              <label htmlFor=\"name-filter\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name-filter\"\n                name={'name'}\n                onChange={handleChange}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"pin-filter\">Pincode</label>\n              <input\n                type=\"number\"\n                id=\"pin-filter\"\n                name={'pinCode'}\n                onChange={handleChange}\n              ></input>\n            </div>\n          </div>\n\n          <div>Last refresh : {getTime()}</div>\n        </div>\n      </div>\n\n      <div className=\"vaccine-list-table\">\n        {filteredVaccineCenters.length !== 0 ? (\n          <CenterDisplay vaccineCenters={filteredVaccineCenters} />\n        ) : (\n          <div className=\"notification-prompt\">\n            <h4>No vaccine centers available!</h4>\n            <button\n              disabled={notificationStatus ? true : false}\n              onClick={() => {\n                setNotificationStatus(true);\n              }}\n            >\n              Notify Me !\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(VaccineCenterList);\n","const createVaccineCenterList = (apiData) => {\n\tlet sessionFilteredCenters = [];\n\tapiData.forEach((center) => {\n\t\tconst newSessions = removeEmptySessions([...center.sessions]);\n\t\tcenter.sessions = newSessions;\n\t\tsessionFilteredCenters.push(center);\n\t});\n\tconst filteredCenters = sessionFilteredCenters.filter(\n\t\t(center) => center.sessions.length !== 0 //Remove centers with 0 sessions\n\t);\n\treturn filteredCenters;\n};\n\nconst removeEmptySessions = (sessions) => {\n\tconst newSessions = sessions.filter((session) => session.available_capacity > 0);\n\treturn newSessions;\n};\n\nexport {createVaccineCenterList};\n","import React, { useState, useEffect } from 'react';\n\nfunction Header({ getDistrict, selectedDistrict }) {\n\tconst [districts, setDistricts] = useState([]);\n\tconst [dropdownStatus, setDropdownStatus] = useState(false);\n\n\tconst getStateData = async () => {\n\t\tconst res = await fetch('https://cdn-api.co-vin.in/api/v2/admin/location/districts/17');\n\t\tconst data = await res.json();\n\t\tsetDistricts(data.districts);\n\t};\n\n\tuseEffect(() => {\n\t\tgetStateData();\n\t}, []);\n\n\tconst handelDropdownButtonClick = () => {\n\t\tif (dropdownStatus) {\n\t\t\tsetDropdownStatus(false);\n\t\t} else {\n\t\t\tsetDropdownStatus(true);\n\t\t}\n\t};\n\tconst handleDistrictSelection = (e, index) => {\n\t\tgetDistrict(districts[index]);\n\t\tsetDropdownStatus(false);\n\t};\n\n\treturn (\n\t\t<header>\n\t\t\t<div>\n\t\t\t\t<h1>Covid Vaccine Notifier</h1>\n\t\t\t\t<div className='dropdown'>\n\t\t\t\t\t<button onClick={handelDropdownButtonClick} className='dropbtn'>\n\t\t\t\t\t\t{selectedDistrict.district_name}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid='myDropdown'\n\t\t\t\t\t\tclassName='dropdown-content'\n\t\t\t\t\t\tstyle={{ display: dropdownStatus ? 'block' : 'none' }}>\n\t\t\t\t\t\t{React.Children.toArray(\n\t\t\t\t\t\t\tdistricts.map((district, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\thandleDistrictSelection(e, index);\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{district.district_name}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='cowin-link'>\n\t\t\t\t<button>\n\t\t\t\t\t<a href='https://selfregistration.cowin.gov.in/'>Co-WIN</a>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport VaccineCenterList from './components/VaccineCenterList';\nimport { createVaccineCenterList } from './components/HelperModules/Center';\nimport Header from './components/Header';\nimport { getCurrentDate } from './components/HelperModules/DateTime';\n\nconst initialDistrict = {\n  district_id: 307,\n  district_name: 'Ernakulam',\n};\n\nfunction App() {\n  const [vaccineCenters, setVaccineCenters] = useState(null);\n  const [selectedDistrict, setSelectedDistrict] = useState(initialDistrict);\n\n  const getVaccineCenters = useCallback(async () => {\n    const url = new URL(\n      'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict',\n    );\n    url.searchParams.append('district_id', selectedDistrict.district_id);\n    url.searchParams.append('date', getCurrentDate());\n    try {\n      const response = await fetch(url, {\n        mode: 'cors',\n      });\n      const data = await response.json();\n      const centerList = createVaccineCenterList(data.centers);\n      setVaccineCenters(centerList);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [selectedDistrict]);\n\n  const getDistrict = district => setSelectedDistrict(district);\n\n  useEffect(() => {\n    getVaccineCenters();\n    const inter = setInterval(() => {\n      getVaccineCenters();\n    }, 10000);\n\n    return () => {\n      clearInterval(inter);\n    };\n  }, [selectedDistrict, getVaccineCenters]);\n\n  return (\n    <div className=\"App\">\n      <Header getDistrict={getDistrict} selectedDistrict={selectedDistrict} />\n      {vaccineCenters && <VaccineCenterList vaccineCenters={vaccineCenters} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}